@model EventureMVC.Models.ViewModel.ExploreViewModel

@{
    ViewData["Title"] = "Explore";
}

<h1>Explore Activities!</h1>


  @* if non-logged in user tries to comment, show modal that tells them they cannot acces this function *@
        @if (!User.Identity.IsAuthenticated)
        {
           <a asp-action="AddActivity" asp-controller="SecondActivity" class="btn btn-outline-primary" style="margin-bottom:1rem" data-bs-toggle="modal" data-bs-target="#loginModal">Post New Activity</a>

        }


<form id="filterForm" method="get" action="/Explore/Index">
    <label>
        <input type="checkbox" name="isFree" value="true" aria-label="Is this activity free?" @(Model.IsFree ? "checked" : "") /> Free Entry
    </label>
    <label>
        <input type="checkbox" name="is18Plus" value="true" aria-label="Is this activity for adults?" @(Model.Is18Plus ? "checked" : "") /> 18+ Only
    </label>
    <label>
        <input type="checkbox" name="isFamilyFriendly" value="true" aria-label="Is the activity family friendly?" @(Model.IsFamilyFriendly ? "checked" : "") /> Family Friendly
    </label>

    <!-- Date filter inputs -->
    <label>
        Start Date: <input type="date" name="startDate" value="@Model.StartDate?.ToString("yyyy-MM-dd")" aria-label="Choose the earliest date you want to attend an activity" />
    </label>
    <label>
        End Date: <input type="date" name="endDate" value="@Model.EndDate?.ToString("yyyy-MM-dd")" aria-label="Choose the latest date you want to attend an activity"/>
    </label>

    <!-- Location filter input with Datalist for auto-fill -->
    <label>
        Location:
        <input type="text" id="location" name="location" placeholder="Enter location" list="locationsList" autocomplete="off" value="@Model.Location" aria-label="Choose location of the activity" />
        <datalist id="locationsList">
            @foreach (var country in Model.CountriesWithCities)
            {
                foreach (var city in country.Value)
                {
                    <option value="@city">@city</option>
                }
            }
        </datalist>
    </label>

    <button type="submit">Apply Filter</button>
    <button type="button" onclick="clearFilters()">Clear Filter</button>
</form>

@* Activities list v1 *@
<div id="activities-container" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
    @foreach (var activity in Model.Activities)
    {
        <div class="col">
            <div class="card shadow-sm">
                <a href="@Url.Action("Index", "Activity", new { activityId = activity.ActivityId })">
                    @if (activity.ImageUrl != null)
                    {
                        <img class="card-img-top" src="@activity.ImageUrl" alt="@activity.ActivityDescription" width="100%" height="225">
                    }
                    else
                    {
                        <img class="card-img-top" src="~/images/palceholdereventimg.jpg" alt="Image of the Event or Activity" width="100%" height="225">
                    }
                </a>
                <div class="card-body">



                    <div class="d-flex justify-content-between">

                        <a href="@Url.Action("Index", "Activity", new { activityId = activity.ActivityId })" class="activity-link">
                            <h5>@activity.ActivityName</h5>
                            <h6>@activity.ActivityLocation</h6>
                        </a>

                        <button type="button" class="like-button"
                                id="like-button-@activity.ActivityId"
                                onclick="toggleLikeDislike(@activity.ActivityId)">
                            <span id="heart-icon-@activity.ActivityId" class="bi bi-heart-fill heart-icon @(Model.LikedActivities.Contains(activity.ActivityId) ? "liked" : "")"> Like</span>
                        </button>
                    </div>

                    @if (activity.DateOfActivity != null){
                        <p class="text-body"> @activity.DateOfActivity?.ToString("f")</p>
                    }
                    else
                    {
                        <p class="text-white">N/A</p>
                    }

                    <div class="mt-auto flex-row justify-content-around">

                        @if (activity.IsFree)
                        {
                            <p class="card-icon">
                                Free
                                <i class="bi bi-check-lg"></i>
                            </p>
                        }
                        else
                        {
                            <p class="card-icon">
                                Not Free
                                <i class="bi bi-currency-dollar"></i>
                            </p>
                        }
                            
                        @if (activity.Is18Plus)
                        {
                            <p class="card-icon">
                                +18
                                <i class="bi bi-exclamation-circle"></i>
                            </p>
                                
                        }
                        else
                        {
                            <p class="card-icon">
                                All Ages
                                <i class="bi bi-check-lg"></i>
                            </p>
                        }
                        
                        @if (activity.IsFamilyFriendly)
                        {
                            <p class="card-icon">
                                Family Friendly
                                @* <i class="bi bi-people-fill"></i> *@
                                <i class="bi bi-check-lg"></i>
                            </p>
                            }
                        else
                        {
                            <p class="card-icon">
                                Not Family Friendly
                                @* <i class="bi bi-people"></i> *@
                                <i class="bi bi-x-lg"></i>
                            </p>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="loginModalLabel">Function not available</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                You cannot access this function. Please, <a href="/User/Login">log in</a> to have full access to Eventure!
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Stäng</button>
            </div>
        </div>
    </div>
</div>

<script>
    function clearFilters() {
        window.location.href = '/Explore/Index';
    }

    function toggleLikeDislike(activityId) {

        //check if user is logged in
        var isLoggedIn = @User.Identity.IsAuthenticated.ToString().ToLower(); // true eller false

        if (!isLoggedIn) {
            // Visa Bootstrap-modal istället för alert
            var loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
            loginModal.show();
            return;
        }

        // Define the URL for toggling like/dislike
        let toggleUrl = `/Explore/LikeActivity?activityId=${activityId}`;
        let heartIcon = document.getElementById(`heart-icon-${activityId}`);
        heartIcon.classList.toggle("liked"); // Toggle the liked class
        // Send the fetch request
        fetch(toggleUrl, {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest',  // Identifies this as an AJAX request
                'Content-Type': 'application/json'
            }
        })
    }

</script>
